#!/bin/bash

### BEGIN INIT INFO
# processname:       node_exporter
# Short-Description: Exporter for machine metrics.
# Description:       Prometheus exporter for machine metrics,
#                    written in Go with pluggable metric collectors.
#
# chkconfig: 2345 80 80
# pidfile: $pid_path/node_exporter.pid
#
#
### END INIT INFO

#set -e

# Source function library.
. /etc/init.d/functions
source /data/application/nodeexporter/node_exporter.conf

NAME=node_exporter
DESC="Exporter for machine metrics"
DAEMON=/data/application/nodeexporter/node_exporter
USER=prometheus
CONFIG=
PID="/data/run/nodeexporter/$NAME.pid"
LOG="/data/log/nodeexporter/$NAME.log"
GOSU=/usr/local/bin/gosu

DAEMON_OPTS=

DAEMON_OPTS="$DAEMON_OPTS  -collector.filesystem.ignored-fs-types=${collector_filesystem_ignored_fs_types} -collector.diskstats.ignored-devices=$collector_diskstats_ignored_devices -collector.filesystem.ignored-mount-points=$collector_filesystem_ignored_mount_points -web.listen-address=:$nodeexporter_port -web.telemetry-path=${web_telemetry_path} -log.level=$log_level  -collector.textfile.directory=${collector_textfile_directory} -collector.netdev.ignored-devices=${collector_netdev_ignored_devices}"

colletors_ops="conntrack,diskstats,entropy,edac,filefd,filesystem,infiniband,loadavg,meminfo,netdev,netstat,sockstat,stat,textfile,time,uname,vmstat,wifi,zfs"
#DAEMON_OPTS="$DAEMON_OPTS -collectors.enabled="conntrack,diskstats,entropy,edac,filefd,filesystem,infiniband,loadavg,meminfo,netdev,netstat,sockstat,stat,textfile,time,uname,vmstat,wifi,zfs""
for en_collector in $enable_collectors;do
  if [[ ${en_collector} != "processes" ]];then
    colletors_ops="$colletors_ops,$en_collector"
  fi
done
DAEMON_OPTS="$DAEMON_OPTS -collectors.enabled=$colletors_ops"

RETVAL=0


# Check if DAEMON binary exist
[ -f $DAEMON ] || exit 0

service_checks() {

  check_alive=`ps axf|grep ${DAEMON} | grep -v grep |wc -l`
  if [ "$check_alive" -ne 0 ]; then
    echo "Service already started; skip..."
    exit 1
  else
    echo "Service was aborted abnormally; clean the PID file and continue..."
    if [ -f "$PID" ]; then
      rm -f "$PID"
    fi
  fi
}

start() {
  service_checks $1
  $GOSU $USER   $DAEMON $DAEMON_OPTS > $LOG 2>&1  &
#  $GOSU $USER   $DAEMON $NODE_OPTS $COLLECTOR_OPS $ > $LOG 2>&1  &
  RETVAL=$?
  echo $! > $PID
}

stop() {
  killproc -p $PID -b $DAEMON  $NAME
  if [ -f $PID ]; then
    rm -rf $PID
  fi
  RETVAL=$?
}

reload() {
  #- sorry but node_exporter doesn't handle -HUP signal...
  #killproc -p $PID -b $DAEMON  $NAME -HUP
  #RETVAL=$?
  stop
  start
}

case "$1" in
  start)
    start
    echo -n $"Starting $DESC -" "$NAME" $'\n'
    ;;

  stop)
    echo -n $"Stopping $DESC -" "$NAME" $'\n'
    stop
    ;;

  reload)
    echo -n $"Reloading $DESC configuration -" "$NAME" $'\n'
    reload
    ;;

  restart|force-reload)
    stop
    start
    echo -n $"Restarting $DESC -" "$NAME" $'\n'
    ;;

  syntax)
    $DAEMON -help
    ;;

  status)
    status -p $PID $DAEMON
    ;;

  *)
    echo -n $"Usage: /etc/init.d/$NAME {start|stop|reload|restart|force-reload|syntax|status}" $'\n'
    ;;
esac

exit $RETVAL
